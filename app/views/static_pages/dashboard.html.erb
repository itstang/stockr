<% provide(:title, "Dashboard") %>
<h1>Dashboard</h1>

<div class="container">
  <div class="row">
    <div class="col-md-6">
      <div class="jumbo-header"><h4>Current Balance: <span class="balance"><%= number_to_currency(current_user.balance) %></span></h4></div>
      <div class="stockcontent">
        <canvas id="line-canvas" class="balance-graph"></canvas>
      </div>
    </div>
    <div class="col-md-6">
      <div class="jumbo-header"><h4>Watch list</h4></div>
      <div class="stockcontent">
        <%= form_tag(stocks_add_path, method: "get") do %>
          <%= label_tag(:symbol, "Stock Symbol:") %>
          <%= text_field_tag(:symbol) %>
          <%= submit_tag("Add to watch list", :class => "btn btn-default") %>
        <% end %>
        <br />
        <table class="table table-striped">
          <thead>
            <tr>
              <th>Symbol</th>
              <th>Company Name</th>
              <th>Asking Price</th>
              <th>Bidding Price</th>
              <th>Sentiment</th>
            </tr>
          </thead>
          <tbody>
            <% @user_watches.each_with_index do |stock, index| %>
              <tr>
                <td><%= stock.symbol.upcase %></td>
                <td><%= @data_watches[index].name %></td>
                <td>$<%= @data_watches[index].day_value_change %></td>
                <td>$<%= @data_watches[index].bid %></td>
                <td><%= @data_watches[index].sentiment %></td>
              </tr>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-6">
      <div class="jumbo-header"><h4>Portfolio</h4></div>
      <div class="stockcontent">
        <canvas id="pie-canvas"></canvas>
      </div>
    </div>
    <div class="col-md-6">
      <div class="jumbo-header"><h4>Stock Prices</h4></div>
      <div class="stockcontent">
        <canvas id="bar-canvas"></canvas>
      </div>
    </div>
  </div>
</div>

<%= javascript_tag do %>
  var randomScalingFactor = function(){ return Math.round(Math.random()*100)};
  var lineChartData = {
    labels : ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    datasets : [
      {
        label: "My First dataset",
        fillColor : "rgba(220,220,220,0.2)",
        strokeColor : "rgba(220,220,220,1)",
        pointColor : "rgba(220,220,220,1)",
        pointStrokeColor : "#fff",
        pointHighlightFill : "#fff",
        pointHighlightStroke : "rgba(220,220,220,1)",
        data : [randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor(),randomScalingFactor()]
      }
    ]
  }

  var randRGB = function () {
      return "rgba("+ Math.floor(Math.random()*256) + "," + Math.floor(Math.random()*256) + "," + Math.floor(Math.random()*256) + ",";
  };

  var prices = <%= raw @stock_prices.to_json %>
  var symbols = <%= raw @stock_symbols.to_json %>
  var shares = <%= raw @stock_shares.to_json %>


  var pieData = [];
  var i = 0;
  var base;
  for (i = 0; i < shares.length; i++) {
    base = randRGB();

    pieData.push({value: shares[i], color: "" + base + "0.5)", highlight: "" + base + "0.75)", label: symbols[i]})
  }


  var randomScalingFactor = function(){ return Math.round(Math.random()*100)};

  var barChartData = {
    labels : symbols,
    datasets : [
      {
        fillColor : "rgba(151,187,205,0.5)",
        strokeColor : "rgba(151,187,205,0.8)",
        highlightFill : "rgba(151,187,205,0.75)",
        highlightStroke : "rgba(151,187,205,1)",
        data : prices
      }
    ]
  }

  window.onload = function(){
    var ctx = document.getElementById("line-canvas").getContext("2d");
    ctx.canvas.width = 300;
    ctx.canvas.height = 300;
    window.myLine = new Chart(ctx).Line(lineChartData, {
      responsive: true
    });
    ctx = document.getElementById("pie-canvas").getContext("2d");
        window.myPie = new Chart(ctx).Pie(pieData);
    ctx = document.getElementById("bar-canvas").getContext("2d");
    window.myBar = new Chart(ctx).Bar(barChartData, {
      responsive : true
    });
  }
<% end %>
